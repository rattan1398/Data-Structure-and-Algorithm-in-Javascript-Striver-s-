function RotatedbSearch(array,target){
    let n=array.length;
    let low=0; high=n-1;
    
    while(low<=high){
        let mid=Math.floor((low+high)/2);
        if(target===array[mid]) return true;

        if (array[low] === array[mid] && array[mid] === array[high]) { //Edge case
            low = low + 1;
            high = high - 1;
            continue;
        }

        if(array[low]<=array[mid]){
            if(array[low]<=target && target<=array[mid]){
                high=mid-1;
            }else low=mid+1;
        }
        else{
            if(array[mid]<=target && target<=array[high]){
                low=mid+1;
            }else high=mid-1;
        }
    }return false;

}
