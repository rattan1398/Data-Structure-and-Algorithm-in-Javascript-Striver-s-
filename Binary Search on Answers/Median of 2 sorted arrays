function median(array1,array2){
    let n1=array1.length;
    let n2=array2.length;

    if(n1>n2) return median(array2,array1); //To decrease complexity, we always take the shorter length array frst 
    let n=n1+n2;
    let low=0,high=n1;
    let left=Math.floor((n+1)/2); //Left side of the symmetery contains one more element than right side
    while(low<=high){
        let mid1=Math.floor((low+high)/2);
        let mid2=left-mid1;
        let l1=-Infinity,l2=-Infinity;
        let r1=Infinity,r2=Infinity;
        if(mid1<n1) r1=array1[mid1];
        if(mid2<n2) r2=array2[mid2];
        if(mid1-1>=0) l1=array1[mid1-1];
        if(mid2-1>=0) l2=array2[mid2-1];

        if(l1<=r2 && l2<=r2){
            if(n%2===1) return Math.max(l1,l2);
            else return ((Math.max(l1,l2)+Math.min(r1,r2))/2);
        }
        else if(l1>r2) high=mid1-1;
        else low=mid1+1;
    }
    return 0;

}
